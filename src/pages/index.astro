---
import clsx from "clsx";

import DatastaxLogo from "../components/DatastaxLogo.astro";
import Form from "../components/Form.astro";
import { saveToAstra } from "../util/save-to-astra";
import { getFromAstra } from "../util/get-from-astra";
import Layout from "../components/Layout.astro";

const url = Astro.request.url;
const properUrl = new URL(url);
const origin = properUrl.origin;
const u = properUrl.searchParams.get("u");
let title = "";
let poem = "";
let ogImageUrl = `${origin}/og-home.png`;

if (u && !poem) {
  title = `${u} | DataStax √ó Valentine's Day`;
  const cachedPoem = await getFromAstra({ username: u });
  if (cachedPoem) {
    poem = cachedPoem.poem;
  } else {
    const langflowClientModule = await import("@datastax/langflow-client");
    const client = new langflowClientModule.LangflowClient({
      baseUrl: "https://langflow.new",
    });
    const flow = client.flow("00c0fa6d-23f1-4582-a906-cf1101c72c3d");
    const getResponse = async () => {
      try {
        return await flow.run(u);
      } catch (e) {
        Astro.redirect("/over-capacity", 302);
        return;
      }
    };
    const response = await getResponse();
    poem = response?.outputs[0]?.outputs[0]?.results?.message?.data?.text;
    if (!poem) {
      Astro.redirect("/over-capacity", 302);
      return;
    }
    await saveToAstra({ username: u, poem });
  }
  ogImageUrl = `${origin}/og?poem=${encodeURIComponent(poem?.split("\n\n")[0])}&username=${encodeURIComponent(u)}`;
}
---

<Layout title={title} url={url} ogImageUrl={ogImageUrl}>
  <main
    class={clsx(
      "flex flex-col gap-8 p-8 max-w-screen-md mx-auto text-center items-center justify-center content-center",
      !poem && "min-h-screen"
    )}
  >
    <a
      href="/"
      class="flex w-full justify-center text-2xl md:text-4xl items-center gap-4"
    >
      <div class="w-64"><DatastaxLogo width="100%" /></div>
      <span>√ó</span>
      <span class="font-bold">
        {
          u ? (
            <img
              class="rounded-full"
              alt={`${u}'s profile picture`}
              src={`https://github.com/${u}.png`}
              width="64"
              height="64"
            />
          ) : (
            "Valentine's"
          )
        }
      </span>
    </a>
    {
      !poem ? (
        <Form />
      ) : (
        <div class="grid gap-4">
          <div class="grid grid-cols-2 md:grid-cols-4 gap-2 items-center">
            <a
              href="/"
              class="bg-white flex items-center text-black p-2 text-sm font-bold h-10 rounded-md"
            >
              Create Yours
            </a>
            <a
              target="_blank"
              href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(`Check out my AI-generated Valentine's Day poem from @datastaxdevs! \n\n${url}`)}`}
              class="bg-black hover:bg-neutral-700 flex items-center border border-white text-white p-2 text-sm font-bold h-10 rounded-md"
            >
              Share on ùïè
            </a>
            <a
              target="_blank"
              href="https://langflow.new/valentines"
              class="flex items-center bg-neutral-800 hover:bg-neutral-700 border border-neutral-700 text-white p-2 text-sm font-bold h-10 rounded-md"
            >
              Go Under the Hood
            </a>
            <a
              onclick="alert('TODO');return false;"
              target="_blank"
              href="https://youtube.com/watch?v=dQw4w9WgXcQ"
              class="flex items-center bg-neutral-800 border hover:bg-neutral-700 border-neutral-700 text-white p-2 text-sm font-bold h-10 rounded-md"
            >
              Learn How it Works
            </a>
          </div>
          <pre class="text-left">{poem.trim()}</pre>
        </div>
      )
    }
  </main>
</Layout>
